

export const DB_KEYS = {
  users: "js_users",
  products: "js_products",
  sales: "js_sales",
  session: "js_session",
};

export const seedData = () => {
  if (!localStorage.getItem(DB_KEYS.users)) {
    const users = [
      { id: "u-admin", name: "Admin", role: "admin", username: "admin", password: "admin123" },
      { id: "u-s1", name: "Counter ", role: "staff", counter: 1, username: "c1", password: "c1" },
      { id: "u-s2", name: "Counter ", role: "staff", counter: 2, username: "c2", password: "c2" },
      { id: "u-s3", name: "Counter ", role: "staff", counter: 3, username: "c3", password: "c3" },
    ];
    localStorage.setItem(DB_KEYS.users, JSON.stringify(users));
  }


  if (!localStorage.getItem(DB_KEYS.products)) {
    const products = [
      {
        id: "p-apple-250",
        name: "7 Up 250ml",
        hsn: "2202",
        price: 41,
        gstPct: 12,
        stock: 12,
      },
      {
        id: "p-orange-250",
        name: "Frooti 250ml",
        hsn: "2202",
        price: 50,
        gstPct: 15,
        stock: 0,
      },
      {
        id: "p-mango-500",
        name: "Maaza 500ml",
        hsn: "0403",
        price: 90,
        gstPct: 18,
        stock: 7,
      },
      {
        id: "p-lime-100",
        name: "Sprite 300ml",
        hsn: "2202",
        price: 41,
        gstPct: 14,
        stock: 5,
      },
    ];
    localStorage.setItem(DB_KEYS.products, JSON.stringify(products));
  }





  if (!localStorage.getItem(DB_KEYS.sales)) {

    localStorage.setItem(DB_KEYS.sales, JSON.stringify([]));

  }


};

export const db = {
  getUsers: () => JSON.parse(localStorage.getItem(DB_KEYS.users) || "[]"),
  setUsers: (u) => localStorage.setItem(DB_KEYS.users, JSON.stringify(u)),
  getProducts: () => JSON.parse(localStorage.getItem(DB_KEYS.products) || "[]"),
  setProducts: (p) => localStorage.setItem(DB_KEYS.products, JSON.stringify(p)),
  getSales: () => JSON.parse(localStorage.getItem(DB_KEYS.sales) || "[]"),
  setSales: (s) => localStorage.setItem(DB_KEYS.sales, JSON.stringify(s)),
  getSession: () => JSON.parse(localStorage.getItem(DB_KEYS.session) || "null"),
  setSession: (s) => localStorage.setItem(DB_KEYS.session, JSON.stringify(s)),
  clearSession: () => localStorage.removeItem(DB_KEYS.session),
};



export const pageShell = {
  header: {
    padding: "12px 16px",
    borderBottom: "1px solid #e5e7eb",
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
  },
  container: { maxWidth: 1200, margin: "0 auto", padding: 16 },
  button: {
    background: "#2563eb",
    color: "#fff",
    border: 0,
    borderRadius: 10,
    padding: "10px 14px",
    cursor: "pointer",
    fontWeight: 600,
  },
  dangerBtn: { background: "#dc2626", color: "#fff", border: 0, borderRadius: 10, padding: "8px 12px", cursor: "pointer" },
  lightBtn: { background: "#f3f4f6", color: "#111827", border: 0, borderRadius: 10, padding: "8px 12px", cursor: "pointer" },
  input: { padding: 10, borderRadius: 10, border: "1px solid #e5e7eb", width: "100%" },
  card: { background: "#fff", border: "1px solid #e5e7eb", borderRadius: 14, boxShadow: "0 1px 0 rgba(0,0,0,0.02)", padding: 12 },
  grid: { display: "grid", gap: 16 },
};



export function toCSV(rows) {
  const header = ["date","counter","staff","product","qty","price","discount","taxable","gst","total"];
  const all = [header.join(",")];
  rows.forEach(r => {
    all.push([
      new Date(r.date).toLocaleString(),
      r.counter,
      r.staff,
      r.product.name,
      r.qty,
      r.product.price,
      r.discount,
      r.totals.taxable,
      r.totals.gst,
      r.totals.total,
    ].join(","));
  });
  return all.join("\n");
}

export function downloadFile(filename, text) {
  const blob = new Blob([text], { type: "text/csv;charset=utf-8;" });
  const url = URL.createObjectURL(blob);
  const a = document.createElement("a");
  a.href = url; a.download = filename; a.click();
  setTimeout(() => URL.revokeObjectURL(url), 1000);
}

export function renderPrintableReceipt(bill) {
  const css = `
    body { font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial; margin: 24px; }
    .row { display:flex; justify-content: space-between; margin: 6px 0; }
    .muted { color:#6b7280; font-size: 12px; }
  `;
  return `<!doctype html><html><head><meta charset="utf-8"/><title>Receipt ${bill.id}</title><style>${css}</style></head><body>
    <h2 style="margin:0;">Juice Shop</h2>
    <div class="muted">${new Date(bill.date).toLocaleString()} • Counter ${bill.counter}</div>
    <hr />
    <div class="row"><div>Product</div><div>${bill.product.name}</div></div>
    <div class="row"><div>Price</div><div>₹${bill.product.price.toFixed(2)}</div></div>
    <div class="row"><div>Qty</div><div>${bill.qty}</div></div>
    <div class="row"><div>Discount</div><div>-₹${bill.discount.toFixed(2)}</div></div>
    <div class="row"><div>Taxable</div><div>₹${bill.totals.taxable.toFixed(2)}</div></div>
    <div class="row"><div>GST (${bill.product.gstPct}%)</div><div>₹${bill.totals.gst.toFixed(2)}</div></div>
    <div class="row" style="font-weight:700"><div>Total</div><div>₹${bill.totals.total.toFixed(2)}</div></div>
    <hr />
    <div class="muted">Bill Mode: ${bill.mode} • Billed By: ${bill.staff} (C${bill.counter})</div>
  </body></html>`;
}

export const th = { textAlign: "left", borderBottom: "1px solid #e5e7eb", padding: 8, fontSize: 12, color: "#6b7280" };
export const td = { borderBottom: "1px solid #f3f4f6", padding: 8 };
